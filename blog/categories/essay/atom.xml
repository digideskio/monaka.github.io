<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: essay | もなもなもなかのページ]]></title>
  <link href="http://www.monaka.org//blog/categories/essay/atom.xml" rel="self"/>
  <link href="http://www.monaka.org//"/>
  <updated>2014-02-14T21:56:14+09:00</updated>
  <id>http://www.monaka.org//</id>
  <author>
    <name><![CDATA[Masaki "monaka" Muranaka]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[howto と way]]></title>
    <link href="http://www.monaka.org/blog/2014/02/14/way-and-howto/"/>
    <updated>2014-02-14T21:49:23+09:00</updated>
    <id>http://www.monaka.org/blog/2014/02/14/way-and-howto</id>
    <content type="html"><![CDATA[<h2>一言で纏めると</h2>

<p><a href="https://twitter.com/monamour555/status/433831823135621120">https://twitter.com/monamour555/status/433831823135621120</a>">https://twitter.com/monamour555/status/433831823135621120">https://twitter.com/monamour555/status/433831823135621120</a></a></p>

<p>みたいなエントリは，地べた這いつくばっている私みたいな雑魚が書くのはいいけれど，
OSSコミュニティの後進育成とか考えているひとは思案のしどころですよね，てな話．</p>

<h2>政治家と議員</h2>

<p>何年か前に読んで「へぇなるほど」と思って，曖昧な記憶のまま，何度か引用しているブログエントリがある．
本稿を書くにあたり探してみたら，割と難なくみつかった．</p>

<!-- more -->


<p>「<a href="http://www.t-ken.jp/">田中けんWeb事務所</a>」の「<a href="http://www.t-ken.jp/diary/20101213">職業としての地方議員</a>」から引用する．</p>

<blockquote><p>　一般的には政治家と議員を同意語として使っている場合が多い。その点、私は政治家と議員を別の言葉として分けて使っている。</p>

<p>　政治家というのは、生き方の問題。政治的な主張をして具体的な行動をしている人間は広義で全て政治家である。</p></blockquote>

<p>(中略)</p>

<blockquote><p>　それに比べて、議員とは、狭義で言う政治家の更に狭い範囲である、現職議員にしか使えない言葉だ。働いて報酬をもらう。つまりその多くが職業でなければ、議員とは言わない。</p></blockquote>

<p>本稿に関係ないところは中略した．また，私は江戸川区に居住しておらず，引用に政治的な何らの意図もないことも述べておく．</p>

<p>引用した理由は，シンプル．
&ldquo;しごと"には，"生き方(ライフスタイル，主義，信条)"と"職業"の2つの側面で成立するという例示が欲しかったから．</p>

<h2>生き方と職業</h2>

<p>世の中では，"しごと"の2つの側面に関する微妙な差は無視されることが多い．
議員と政治家の呼び分けなんて，ふつうは深く考えない．</p>

<p>でも，経営層はこの辺りについて，実に敏感だ．</p>

<p>数年前に，トヨタが「トヨタ・ウェイ」という本を出して書店のビジネス棚を賑わした．
世界企業のトヨタが，微々たる印税を期待して本を出すはずがない．
これは，国際企業として成長するトヨタが，関連企業向けに，自社の精神を説くべく作られた本である．</p>

<p>IT関連でいえば，ある時期，Microsoft press から「私がマイクロソフトで学んだこと」系のライトビジネス書がぼこぼこと出た．
本体であるマイクロソフトの経営層の流れと出版年を見比べると，なるほどと思うだろう
．</p>

<p>IBMの「巨象も踊る」も，社外への広告宣伝の要素もあれば，自社関連企業への要素もあるだろう．</p>

<p>これら巨大企業は，当然のこととして，自社内従業員のための作業手順書を完備している．
それでもなお，各社は，各社の哲学や精神論を通じ，身の処し方のレベルまで従業員に考えさせ，考えを合わせていく．</p>

<p>そういう潮流を，キモチワルイと切り捨てたくなるとしたら，その気持ちは判る．
ただ，かつて国家のレベルで行っていたことが，国境を軽々と跨ぐようになってきて，多国籍巨大企業が自ら行わなければならなくなった，と考えると，それは必要なこと…必要悪なのかもしれないが…ではないだろうか．</p>

<p>これはたぶん営利企業に限らない．
NPO/NGO無しでは今の世界は回らず，それぞれにそれぞれのアイデンティティがあり，構成員は自らの生き方と組織の生き方をすりあわせているのだろう．</p>

<h2>howto と way</h2>

<p>そして，私は思うのだ．
OSSエンジニアにも，職業と生き方との，2側面が存在するのでは，と．</p>

<p>本稿では，２つの側面を表現する適切な語が思いつかなかったので，howto と way という言葉を使う．</p>

<p>howto は，OSSエンジニアが開発を遂行するに当たって直接的に必要な知識，直接的に賃金を得るための手段．つまり職業に相当する．
一例を挙げるなら，Linux界隈で膨大に存在する howto 文書を理解し開発なり設定なりする能力だ．</p>

<p>一方，way は，OSSエンジニアとして円滑に生き続けられるために必要な知恵．つまり，生き方，に相当する．
具体的には，ソフトウェアの自由に対する知識と自分なりの見解，ハッカーマインドの実践，などなど．</p>

<p>これらは，両方必要に見えて，短期ならば，片方でも割とどうにかなる．</p>

<p>顧客や上司からLinuxを指定された，という理由でOSSに関わる技術者は，howto だけ心得ておけばよい．
実際そういう技術者も，世の中には少なくない．
ときどき GPL のコードをコピペして炎上するかもしれないが，まあ，なんとかなる．</p>

<p>wayだけ理解して食いっぱぐれないでいるのは，エンジニアとしては厳しい．
しかし，ヒョーロンカとか扇動家としてなら，wayだけでも関与はできる．
某巨大匿名掲示板などを眺めていると，この層も，案外多いように思う．</p>

<p>ただしもちろん，両方備えるのがスタートラインではある．
片方だけでは，エコシステムに参加できず，やがて消えていくであろう．</p>

<h2>howto と way，何にフォーカスするか</h2>

<p>OSS関連のコミュニティ活動を傍から見ていて，不思議だなと思うことがある．
参加したいと思う側も受け入れる側も，howto と way の区別があんまりついていないのではないか．
これがニッポン固有のことなのか，世界普遍な傾向なのかは判らない．</p>

<p>壇上に登るような方々は，OSSエンジニアとして大成しており，両者は不可分のものとして会得してるものだろう．だからこそ大成したという言い方もできるだろうとも思う．</p>

<p>一方で，「OSSにあこがれています．スーパーハカーすごいと思います」「でも VCS よくわかりません苦手です．英語もダメです．上司の説得が」という層は，howto と way の両側面があるということも，理解できていないだろう．</p>

<p>その辺り，整理できていないと，伝わるべき情報が上手く伝授されないのではないか．
「憧れたけれど，何をすれば判らなくて，やっぱ俺には無理だったわ」と，情熱の無駄使いだけが起きて終わるのではないだろうか．</p>

<p>さて，冒頭の私の tweet は，howto についてのみ言及している．
そして，howto には way も伴うと，根拠なく期待している．
おそらくスジの悪い言い回しだ．
しかし私はそういう tweet でも許される．</p>

<p>だって，私が気にする必要なんてあるの?
tweetを眺めていると，後進育成の文脈で目立つ方々も，深く考えていなさげなのに．</p>

<h2>そして神格化と娯楽化で終わる</h2>

<p>かくして壇上は「よくわからないけれど，すごい」一代芸を持つエンジニアの舞台となる．
行き着く先は，神格化と娯楽化．</p>

<p>義務教育では，なぜかやたらと偉人の伝記を読ませられる．
それらは，偉人たちにとっては(脚色はあるかもしれないが)リアルな人生だ．
しかし，読む子供たちには，ファンタジーの一種である．
なぜすごいのか，近づくためにはどうすればよいのか．
そういうことをリアルに感じられない物語は，容易にファンタジー化する．
たぶん成人でも一緒だ．意識高い層の，奇妙なジョブズ信仰をみればいい．</p>

<p>「OSSの仲間を増やしたい」「興味のある人に伝えたい」
そう思っても，至るのは，神格化と，娯楽化．
聴衆に与えるのは一時の高揚感と，名刺交換をしたという事実．</p>

<p>それで十分だ，という人もいるだろう．
解る人には解る，伝わる人には伝わる．</p>

<p>…まあ，それはそれでもよいのかもしれないが．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ハッカーとして名を成すための「運」]]></title>
    <link href="http://www.monaka.org/blog/2014/02/14/luck-for-being-a-great-hacker/"/>
    <updated>2014-02-14T13:14:58+09:00</updated>
    <id>http://www.monaka.org/blog/2014/02/14/luck-for-being-a-great-hacker</id>
    <content type="html"><![CDATA[<p>本稿の契機(元ネタ)は「<a href="http://d.hatena.ne.jp/hyoshiok/">未来のいつか/hyoshiokの日記</a>」の「<a href="http://d.hatena.ne.jp/hyoshiok/20140212/p1">まつもとゆきひろのコピーは作れるのか。</a>」および，その反響 tweet から．</p>

<p>元ネタで示されている「Rubyにみるグローバルソフトウェア開発」というタイトルでの講演は，聴講していない．
そのため，今書いているエントリは，元の文脈から逸れている可能性はある．
インスパイヤ系ってことで，ひとつよしなに．</p>

<p>いろいろ思うところはあるのだが，一気に書くと発散するので，数回に分けて書く．</p>

<p><a href="https://twitter.com/monamour555/status/434162914497294336">https://twitter.com/monamour555/status/434162914497294336</a>">https://twitter.com/monamour555/status/434162914497294336">https://twitter.com/monamour555/status/434162914497294336</a></a></p>

<p>今回は，「運(幸運/成功)」について．</p>

<h2>「運」とは何か．</h2>

<!-- more -->


<p><a href="https://twitter.com/yukihiro_matz/status/434153565423013888">https://twitter.com/yukihiro_matz/status/434153565423013888</a>">https://twitter.com/yukihiro_matz/status/434153565423013888">https://twitter.com/yukihiro_matz/status/434153565423013888</a></a></p>

<p>プログラミング言語の開発者といえば，用語定義に対しての厳格さで言えば，世界最強の部類にいるであろう．
その猛者たちが，「運」とは何かを定義しないで話を進めている．</p>

<p>みたいなところを興味深く思いつつ．</p>

<h2>とりあえずオレオレ定義する</h2>

<p>さりとて辞書定義を引っ張ってきても，汎用過ぎて収束させづらい．
本稿では，「運がいい」「幸運」を，「至近数十年に影響する成果，またはそれを出す力」くらいに定義しておく．
もちろん，そうでない幸運があるということは，私も知っている．
しかし，今扱おうとしている狭い文脈では，「幸運」と「成功」「実力」辺りとを同一視しても許されるだろう．</p>

<p>すると，「運」は，「幸運」へ導く(もしくは遠ざける)要素である．
「運」は，1回で「幸運」か否かを決することはおそらく稀で，複数の「運」の積み重ねで決まる．</p>

<p>この辺までは，本稿の文脈でという条件付きなら，大きな異論は出ないだろう．</p>

<h2>「運」はコントロール可能か</h2>

<p>さて，この辺りから，合意形成への雲行きは怪しくなる．
「運」とはコントロール可能だろうか．</p>

<p>両極端は，"コイントスのようなものでコントロール不能" と
&ldquo;集合知や学習によってコントロール可能"だろう．</p>

<p>もちろん，考え方の中間の考え方も有り得る．
&ldquo;特定の条件では再現確率を上げられるが，時代背景など異なれば再現することは困難"，のような</p>

<p>この辺りは，各自の"生き方"に関わってくる問題であり，また同じ人であっても扱う問題領域により主義主張が変わってくることも多い．</p>

<p>本稿での，私の基本的な立場は，チキンだ．
「コントロール可能か否かも含めて，わからない．
ここがコントロールできないものである可能性を踏まえると， <strong>運の最適化はできるかもしれないが，試みは不経済</strong> ．以上．」</p>

<p>不経済な最適化は行わない．
これは hack のキホンだと思う．</p>

<h2>「幸運」はコントロール可能か</h2>

<p>「運」については，私個人としては，コントロール可能かどうか判断は投げた．
しかし，「幸運」はどうだろうか．</p>

<p>本稿での定義による「運」と「幸運」は金融市場での勝敗と似ている．
私は経済学の素養に乏しいので，例示しておいてナンだが，馬脚を表す前に言及を切り上げたい．
…どうやら， <em>特定の市場に対し，長期に渡って資本を投下し続けられた人が「幸運」を手にする</em> ，らしい．</p>

<p>振り返り，ソフトウェア業界で目立つ人思い起こす．
多作の hacker も皆無ではないが，傾向としては，ごく少数の技術要素に拘り抜いた人への高評価が目立つのではないか．</p>

<p>本稿を書く契機になった Matz 氏は「私は人の役に立ったプログラムは人生で3つくらいしかない」と壇上で公言する．
もちろん Ruby は大成功．
mruby もたぶん成功するだろう．</p>

<p>Linux の Linus 氏は，git も成功させたが，言い方を変えると絶大な知名度の割に2つしか作品がない．</p>

<p>TOPPERSの高田教授は静的OS一筋．</p>

<p>こどもプログラミングの第一人者となった阿部さんは筋金入りのSmalltalker．</p>

<p>その他，枚挙に暇がない．</p>

<p>「成功するには，成功するまで続けることだ」というのは，しばしば軽口として使われる．
しかし，ソフトウェア開発に関しては，これが最強かつ唯一の成功法則なのではないかと，私は思う．
<strong>とにかく継続する，という行動は，個々人のレベルでも十分にコントロール可能だ</strong>．</p>

<p>こんな風に過度に単純化すると，成功した方々が何も考えていないように見えて失礼かもしれないが．継続するという行為そのものが，才能であると私は考える．</p>

<p>ちなみに私は，一行パッチを送ったプロジェクトの数なら日本で5%に入れる気がしているが，一途なものがなく，いまやこのアリサマだ．
浮気性は，野垂れ死ぬ．</p>

<h2>「幸運」に向かわせて良いか</h2>

<p>だから，もし本気で「まつもとゆきひろのコピー」なるものを作りたいのであれば，脇目もふらずに開発を続けさせるべきだろう．
もうちょっと穏当に言い直すなら，単一プロダクトの開発を長期継続できる環境を整備すべきだ．
人生を賭して構わないと思うプロダクトを早めに見つけさせる(見つける手伝いをする)ことも大事だ．
「幸運」を手にするまで10年から20年くらいかかるから，若いうちに．</p>

<p>そうすれば，歩留まりはわからないけれど，それなりの量のコピーはできるかもしれない．
が，しかし，まあ…．
<a href="http://www.yomiuri.co.jp/science/news/20140202-OYT1T00332.htm">STAP細胞の発見に際して，小保方さんと共同研究を行った若山教授の一言</a>は，受け止めて置く必要はあるだろう．曰く，</p>

<blockquote><p>「彼女は次元が違い、難しいかもしれない。小保方さんのように世紀の大発見をするには誰もがあり得ないと思うことにチャレンジすることが必要だ。でもそれは、若い研究者が長期間、成果を出せなくなる可能性があり、その後の研究者人生を考えればとても危険なこと。トライするのは並大抵の人ではできない」</p></blockquote>

<p>不世出を量産しようとすれば，歪は出る．
その歪に沈んだ若者(たぶん沈む頃にはオッサンオバサン)をどうするのだろう．
セーフティネットの用意もなく，イケイケドンドンで若いのを向かわせるのだとしたら，無責任であろう．</p>

<h2>…</h2>

<p>オレは賭けるんだ，という若いのを留めることも，私はしないけれどもね．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[組込みシステム is 何?]]></title>
    <link href="http://www.monaka.org/blog/2014/02/11/what-is-embedded-system/"/>
    <updated>2014-02-11T12:57:57+09:00</updated>
    <id>http://www.monaka.org/blog/2014/02/11/what-is-embedded-system</id>
    <content type="html"><![CDATA[<p>曰く．</p>

<blockquote><p>一円単位でコストを削っているのでファームウェア書き換え前提のプロセスは組み込みではないです。iPhoneは組み込みじゃないですから。</p></blockquote>

<p>溜息が出る．
組込みシステムの文脈で露出の高い方から，こういう類の意見が出るたびに．</p>

<!--more-->


<p>組込みシステムでは，一円単位でのコスト抑制がかかることは，珍しくは無い．
それは，その通り．
コストが全て．だから，最近の自動車のコンピュータは書き換え可能になっている．
ムダ・ムラを徹底的に排除する，あのトヨタの自動車でさえも．</p>

<p>iPhone は組込みではないという．
ならば，科学館や美術館へ行ってみるといい．
iPhone の兄弟である iPad が，壁面に掲げられ，パネルに埋め込まれ，運用されているのをしばしば見かけるだろう．
ああ，組込みシステムの開発者たちは，そういう場所に行く暇もないくらい忙しいのだっけか．</p>

<p>サイネージの多くが，Windowsで動いている．
自動販売機でLinuxのブートプロセスが表示されている写真が，SNSにアップロードされている．
これらは組込みではないって?</p>

<p>リセットベクタから管理するのが組込み?
ならば.NET Micro frameworkや一部の組込みLinuxは，れっきとした組込みだろう．
これらは自ら(つまりファーム)の一部を書き換えるケースを暗黙的に仮定している．</p>

<p>組込みシステムの守備範囲は，膨大だ．
そしていまだに膨張を続けている．
この文明が滅ぶまで，膨張し続けるだろう．</p>

<p>歴史の中で，確かに，ファームウェア書換ができないシステムが優位な時代もあった．
そういうシステムは今もあるだろう．今後も全滅するとは思わない．
しかし，組込みシステムの守備範囲が広がっていく中で，割合として減っていくのは間違いない．
かつて，自動車のエンジン制御用コンピュータは，ファームウェアの書換を想定した作りではなかった．家電も，同じ傾向があった．</p>

<p>時代の流れに抗っても，得られるものは多くない．
過去のある時点における優位をもって「組込み」を定義し続けたとき，
得られるのは自己肯定感だけだろう．
世間と専門家との定義の乖離は，専門家の価値低下を招き，組込みシステムを取り巻く業界を衰退に導くだろう．</p>

<p>溜息が，こぼれる．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Keep good company]]></title>
    <link href="http://www.monaka.org/blog/2014/02/03/keep-good-company/"/>
    <updated>2014-02-03T15:30:22+09:00</updated>
    <id>http://www.monaka.org/blog/2014/02/03/keep-good-company</id>
    <content type="html"><![CDATA[<p>起業したいという方と話をしていると，必ず出るのが，雇用に関する話．</p>

<p>曰く，「起業をしたいのに，社員候補が居ない．」
経営と雇用を混同している起業志望者の．典型だ．</p>

<p>別のパターンもある．
同年代で先に起業した人たちの「社員の定着が悪い」とぼやくのを聞き，起業前から心配している．
中年から上の年代に多い．</p>

<p>こんなふうに，起業/経営と，雇用することが不可分になっている方は，想像以上に多い．
…というか，私自身が，割と長い間，不可分に考えていた．</p>

<h2></h2>

<p>今の私は，こう思う．
「雇用するから，社員の心配をしなければいけなくなる．雇用はしちゃダメ」</p>

<!-- more -->


<p>限られた例外は，人材派遣会社だ．
特に特定派遣は，雇用をしないわけにはいかない．社員にしないと派遣できないから．
私に思い浮かぶのはこの1例のみだが，その他，許認可等で，雇用が避けられない場合も無くはないだろう．</p>

<p>しかしそれでも，雇用は可能な限り避けるべきだと，思う．</p>

<p>ネットの進展で，特に経理総務系の仕事の多くはアウトソーシングできる．
10年前に Money Forward があったなら，私は総務雇用のみならず税理士との契約もしなかっただろう．
物販のロジスティクスは，月5000円からでAmazonが引き受けてくれる．</p>

<p>セールスだけは，どんな分野であれ自社で抱えたほうがよいと，私も思う．
しかし付随するPRやブランディングに関しては，外にだしたほうがよい結果が得られる．(もちろん，それらを商材としている会社は別)</p>

<p>技術者も，優秀な人は必ずしも雇用しなくてもよい時代だ．
もしIT関係なら，人材派遣や紹介業に頼らなくても，勉強会などで学生やフリーランスを一本釣りすることは不可能ではない．
サラリーマンでも，以前ほど副業規定はきつくない．
もちろん，一本釣りに見合うだけの目利きや信頼を，釣る側が備えている必要はあるけれども．</p>

<h2></h2>

<p>起業関連のセミナーに行くと，厚生労働省が数多くの雇用対策の助成を行っている，と紹介される．
なんとなくお得に感じるのは，解る．
でも，国が特定分野に助成を行うということは，
経済合理性に任せた場合には，誰も国の思惑通りには選択しない，ということでもある．</p>

<p>中規模老舗企業は，なんだかんだいって資金的にも総務人事機能的にも体力がある．
延命として，そういう貧乏くじを自ら引くのは，アリだろう．
しかし，資本力が無いスタートアップにとっては，まさに自殺行為だ．</p>

<p>少し考えると，解ることだと思うのだが．
目の前の現金に釣られたくなる気持ちも解るのだが．</p>

<h2></h2>

<p>こういったことを切々と説明しても，起業志望者たちの少なからずは，納得した顔にならない．</p>

<p>私の説明が舌足らずなのだろう．
そんなときは，「そうですね．気のいい社員が見つかって，愉しい会社ができるといいですね」
と作り笑顔で話を打ち切る．</p>

<p>作り笑顔ではあるけれども，発した言葉は嘘ではない．
そう．
気のいい社員と一緒に製品やサービスと世に問うのは，とても愉しいことなのだ．</p>

<p>だからこそ，起業家たちは，雇用には慎重にならなければならない．
気のいい社員を解雇する瞬間の絶望を，先回りして想像しなければならない．
経営をしたいのか，雇用をしたいのかを，常に自らに問わなければいけない．</p>

<p>悪いことは言わん．
絶望を味わったヤツの言うことは，聞いておけ．</p>

<p>この辺甘く考えていると，My own Limited Company しか残らない最後が来るよ．</p>

<h2></h2>

<p>その上で，雇用をしたいなら，すればいいと思う．</p>

<p>なお，言うまでもないことだけれども，雇用自身は絶対悪ではない．
費用対効果が得られる確証があっての雇用は，経営者が決断すべき仕事ではある．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[参加しないと見せないよ．を作った罪]]></title>
    <link href="http://www.monaka.org/blog/2014/02/01/my-fault/"/>
    <updated>2014-02-01T08:28:21+09:00</updated>
    <id>http://www.monaka.org/blog/2014/02/01/my-fault</id>
    <content type="html"><![CDATA[<p>140字以内で纏めると，こういうこと．</p>

<p><a href="https://twitter.com/monamour555/status/429207095041224704">https://twitter.com/monamour555/status/429207095041224704</a>">https://twitter.com/monamour555/status/429207095041224704">https://twitter.com/monamour555/status/429207095041224704</a></a></p>

<p>私は，TOPPERSプロジェクトという，組込み系OSSを担いだNPOに参加していた．
設立準備から手伝って，一応10年くらい理事もしていた．</p>

<p>NPO法人TOPPERSプロジェクトは，組込みソフトの団体として，成功したと思う．
電子ピアノにも，宇宙機にも，自動車にも載った．
私が書いたソースコードも，割と入っている．
そこらそんじょのOSSなんざ蹴散らすくらいの採用例，出荷総数はあるだろう．</p>

<p>今は辞めた．
理事も辞めたし，今や会員ですらない．</p>

<!-- more -->


<p>当時やっていた会社が傾いたとか，いろいろ直接的な理由はあるのだが．
大きな背景として， <strong>OSSプロジェクトとしてのアンチパターンを作っているのではないか</strong> ，という疑問が年を追う毎に，私の中で大きくなっていったのが，ある．</p>

<p>TOPPERSプロジェクトには，会員以外には見せないよ，という仕組みがある．
具体的には，いわゆる，早期リリースという制度．
当初から，会員企業が受託製品に使った場合の，ソースコードの扱いとか，厳密運用が難しいことは解っていた．
私が辞める頃には，会員が，先に開かれたOSS (って表現は変だが) として公開し，そのあとプロジェクトにコントリビュートするなんてこともあったりして，制度として崩壊していた気もする．</p>

<p>&ldquo;オープン"ソースを管理するプロジェクトがソースコードを隠す，というのは，少し考えればわかる．矛盾した話だ．なんで当時気づかなかったのだろうw．</p>

<p>そして，各方面が指摘しているとおり，オープンソースは，ソースコードもさることながら，生産や管理のプロセスの透明化にメリットがある．
生産や管理のプロセスを，参加者にしか見せないというのは，ソースコードを隠すのと同様に，スジとしては最悪手の部類だろう．
そこで，本稿最初に引用した tweet へ繋がる．</p>

<p>組織として成立させるためには，なんらかのメリットを出す必要はある．
その辺りの仕込みは大変なところだと思うのだがしかし．</p>

<p>言い訳になるが，TOPPERSプロジェクトが立ち上がった2000年当時，オープンソースは暗中模索だった．
私は他人様よりも愚かなので，間違いも多い．
でも，もうあれから月日は流れた．
私は愚かなままかもしれないが，他人様はそろそろ良手を編み出しても良い頃だろう．</p>

<p>良手を編み出す上で，悩ましいのが，TOPPERSプロジェクトの確かな成功ではないかという気がしている．
厳密に言うと，NPO組織としては，安定収入で成功しているという事実だ．
…というと不幸を望んでいるように読めそうだが，言うまでもなく，そうではない．
今は袂を分かつ立場だが，成功するように私も頑張った．
成功し続けていただかないと，日本の組込みソフト業界全体が困る．</p>

<p>しかし，言葉を慎重に選ぶべきかもしれないが，OSSプロジェクトとしてのTOPPERSは失敗だったとも思っている．
もともと「OSSは目的ではなく手段だ」という立ち位置の団体ではあった．
なので，OSSプロジェクトとして側面がどうなろうとも，TOPPERSプロジェクトには何らの傷がつくわけでもない．</p>

<p>私がマズいと思っているのは，TOPPERSプロジェクトの成功が，OSS系NPOのロールモデルになりそうな傾向だ．
実際，TOPPERSプロジェクトの定款を参照しました，という声は，他の{組込系|OSS系}NPOから，ずいぶんと頂いた．</p>

<p><a href="http://ossforum.jp/ossaward8th2">「第8回 日本OSS貢献者賞・日本OSS奨励賞」</a> が示す通り，ニッポンのOSSは，この点についてあまり深く考えていないか，判っていて目をつぶっているか，どちらからしい．
そして，そのロールモデルが確立するまでの10余年には，間違いなく私がいる．
割と中心に近いところに．</p>

<p>罪なことをしたなぁ，と，肩を落としている．ごめんなさい．</p>
]]></content>
  </entry>
  
</feed>
